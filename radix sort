#include<stdio.h>
int get_max (int a[], int n){
   int max = a[0];
   for (int i = 1; i < n; i++)
      if (a[i] > max)
         max = a[i];
   return max;
int getMax(int nums[], int n) {
    int max = nums[0];
    int i;
    for (i = 1; i < n; i++)
        if (nums[i] > max)
            max = nums[i];
    return max;
}
void radix_sort (int a[], int n){
   int bucket[10][10], bucket_cnt[10];
   int i, j, k, r, NOP = 0, divisor = 1, lar, pass;
   lar = get_max (a, n);
   while (lar > 0){
      NOP++;
      lar /= 10;
   }
   for (pass = 0; pass < NOP; pass++){
      for (i = 0; i < 10; i++){
         bucket_cnt[i] = 0;
      }
      for (i = 0; i < n; i++){
         r = (a[i] / divisor) % 10;
         bucket[r][bucket_cnt[r]] = a[i];
         bucket_cnt[r] += 1;
      }
      i = 0;
      for (k = 0; k < 10; k++){
         for (j = 0; j < bucket_cnt[k]; j++){
            a[i] = bucket[k][j];
            i++;
         }
      }
      divisor *= 10;
      printf ("After pass %d : ", pass + 1);
      for (i = 0; i < n; i++)
         printf ("%d ", a[i]);
   }
void CountSort(int nums[], int n, int exp) {
    int output[n];
    int i, cnt[10] = { 0 };
    for (i = 0; i < n; i++)
        cnt[(nums[i] / exp) % 10]++;
    for (i = 1; i < 10; i++)
        cnt[i] += cnt[i - 1];
    for (i = n - 1; i >= 0; i--) {
        output[cnt[(nums[i] / exp) % 10] - 1] = nums[i];
        cnt[(nums[i] / exp) % 10]--; 
    }
    for (i = 0; i < n; i++)
        nums[i] = output[i];
}
int main (){
   int i, n, a[10];
   printf ("Enter the number of items to be sorted: ");
   scanf ("%d", &n);
   printf ("Enter items: ");
   for (i = 0; i < n; i++){
      scanf ("%d", &a[i]);
   }
   radix_sort (a, n);
   printf ("Sorted items : ");
   for (i = 0; i < n; i++)
      printf ("%d ", a[i]);
   return 0;
void RadixSort(int nums[], int n) {
    int m = getMax(nums, n);
    for (int exp = 1; m / exp > 0; exp *= 10)
        CountSort(nums, n, exp);
}
void print(int nums[], int n) {
    int i;
    for (i = 0; i < n; i++)
        printf("%d ", nums[i]);
}
int main() {
    printf("Enter number of elements: ");
    int N= 0;
    scanf("%d", &N);
    int nums[N];
    printf("Enter elements: ");
    for(int i=0; i<N; i++){
        scanf("%d", &nums[i]);
    }
    RadixSort(nums, N);
    printf("Sorted Array is: ");
    print(nums, N);
    return 0;
}
